@startuml graphql
hide circle
hide empty members
skinparam ArrowFontSize 11

class Query {
  {method} +repository(name: String!): Repository
  {method} +repositories: Connection<Repository>!
  {method} +codeSmell(id: ID!): CodeSmell
  {method} +codeSmellLifespan(id: ID!): CodeSmellLifespan
}
Query -- Repository
Query -- CodeSmell
Query -- CodeSmellLifespan

class Repository {
  +name: String!
  {method} +commit(oid: String!): Commit
  {method} +commits: Connection<Commit>!
  {method} +codeSmellLifespans: Connection<CodeSmellLifespan>!
}
Repository "1" *-- "0..*" Commit
Repository "1" *-- "0..*" CodeSmellLifespan

class Commit {
  +oid: String!
  +committer: Signature!
  +author: Signature!
  {method} +combinedFileDifferencees: Connection<CombinedFileDifference>!
  {method} +codeSmells: Connection<CodeSmell>!
  {method} +files: Connection<File>!
}
Commit --> Signature : committed by >
Commit --> Signature : authored by >
Commit "1" *-- "0..*" CodeSmell : exists in <
Commit "1" *-- "0..*" File : exists in <
Commit "1" *-- "0..*" CombinedFileDifference

class CombinedFileDifference {
  +changeKinds: [FileChangeKind!]!
  +headFile: File
  +baseFiles: [File]!
}
CombinedFileDifference "0..*" -- "0..1" File : of >
CombinedFileDifference "0..*" -- "0..*" File : compared to >
CombinedFileDifference --> FileChangeKind : of >

enum FileChangeKind {
  ADDED
  COPIED
  DELETED
  MODIFIED
  RENAMED
  TYPE_CHANGED
}

class Signature {
  +name: String!
  +email: String!
  +date: String!
}

class CodeSmell {
  +id: ID!
  +message: String!
  +commit: Commit!
  +locations: [Location!]!
  +ordinal: Int!
  {method} +lifespan: CodeSmellLifespan!
}
CodeSmell "1..n" --> "0..n" Location : at >

class Location {
  +file: File!
  +range: Range!
  +contents(encoding: String): String!
}
Location --> File : in >
Location --> Range : at >
class Range {
  +start: Position!
  +end: Position!
}
Range --> Position : from >
Range --> Position : to >
class Position {
  +line: Int!
  +character: Int!
}

class CodeSmellLifespan {
  +id: ID!
  +kind: String!
  +repository: Repository!
  +duration: String!
  +interval: String!
  {method} +instances: Connection<CodeSmell>!
}
CodeSmellLifespan "1" *-- "1..n" CodeSmell

class LineCounts {
  +total: Int!
  +source: Int
  +comment: Int
  +single: Int
  +block: Int
  +mixed: Int
  +blockEmpty: Int
  +empty: Int
  +todo: Int
}

class File {
  +path: String!
  +linesCount: Int!
  +content(encoding: String): String!
  +lineCounts(encoding: String): LineCounts!
  {method} +codeSmells: Connection<CodeSmell>!
}
File "1..*" *-- "0..*" CodeSmell : contains >
File --> LineCounts : has >

@enduml
