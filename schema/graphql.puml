@startuml graphql
hide circle
hide empty members
skinparam ArrowFontSize 11
skinparam monochrome true
skinparam style strictuml
skinparam shadowing false
skinparam backgroundColor transparent
skinparam classBackgroundColor transparent

class Query {
  {method} +repository(name: String!): Repository
  {method} +repositories: Connection<Repository>!
  {method} +codeSmell(id: ID!): CodeSmell
  {method} +codeSmellLifespan(id: ID!): CodeSmellLifespan
  {method} +analysis(name: String!): Analysis
  {method} +analyses: Connection<Analysis>
}
Query "1" *-- "0..*" Repository : queries >
Query "1" *-- "0..1" Repository : queries >
Query "1" *-- "0..1" CodeSmell : queries >
Query "1" *-- "0..1" CodeSmellLifespan : queries >
Query "1" *- "0..*" Analysis : queries >
Query "1" *- "0..1" Analysis : queries >

class Analysis {
  +name: String!
  {method} +analyzedRepositories: Connection<Repository>!
  {method} +analyzedCommits: Connection<Commit>!
  {method} +codeSmellLifespans: Connection<CodeSmellLifespan>!
}

class Repository {
  +name: String!
  {method} +commit(oid: GitObjectID!): Commit
  {method} +commits: Connection<Commit>!
  {method} +codeSmellLifespans: Connection<CodeSmellLifespan>!
}
Repository "1" *-- "0..*" Commit
Repository "1" *-- "0..*" CodeSmellLifespan
Analysis "0..*" o-- "0..*" Repository : analyzed >

class Commit {
  +oid: GitObjectID!
  +committer: Signature!
  +author: Signature!
  +parents: [Commit!]!
  {method} +combinedFileDifferences: Connection<CombinedFileDifference>!
  {method} +codeSmells: Connection<CodeSmell>!
  {method} +files: Connection<File>!
}
Commit "0..*" *-- "0..*" Commit : has parents >
Commit --> Signature : committed by >
Commit --> Signature : authored by >
Commit "1" *-- "0..*" CodeSmell : exists in <
Commit "1" *-- "0..*" File : exists in <
Commit "1" *-- "0..*" CombinedFileDifference : applied >
Commit "0..*" --o "0..*" Analysis : analyzed <

class CombinedFileDifference {
  +changeKinds: [FileChangeKind!]!
  +headFile: File
  +baseFiles: [File]!
}
CombinedFileDifference "0..*" o-- "0..1" File : of >
CombinedFileDifference "0..*" o-- "0..*" File : compared to >
CombinedFileDifference --> FileChangeKind : of >

enum FileChangeKind {
  ADDED
  COPIED
  DELETED
  MODIFIED
  RENAMED
  TYPE_CHANGED
}

class Signature {
  +name: String!
  +email: String!
  +date: String!
}

class CodeSmell {
  +id: ID!
  +message: String!
  +commit: Commit!
  +locations: [Location!]!
  +ordinal: Int!
  +changes: Int!
  {method} +predecessor: CodeSmell
  {method} +successor: CodeSmell
  {method} +lifespan: CodeSmellLifespan!
}
CodeSmell "0..*" o-- "1..*" Location : at >
CodeSmell "1" --> "0..1" CodeSmell : follows >
CodeSmell "1" --> "0..1" CodeSmell : followed by >

class Location {
  +file: File!
  +range: Range!
  +contents(encoding: String): String!
}
Location "0..*" -* "1" File : in >
Location --> Range : at >
class Range {
  +start: Position!
  +end: Position!
}
Range -> Position : from >
Range -> Position : to >
class Position {
  +line: Int!
  +character: Int!
}

class CodeSmellLifespan {
  +id: ID!
  +kind: String!
  +duration: String!
  +interval: String!
  {method} +repository: Repository!
  {method} +analysis: Analysis!
  {method} +instances: Connection<CodeSmell>!
}
CodeSmellLifespan "1" *-- "1..*" CodeSmell : part of <
CodeSmellLifespan "0..*" --* "1" Analysis : detected <

class LineCounts {
  +total: Int!
  +source: Int
  +comment: Int
  +single: Int
  +block: Int
  +mixed: Int
  +blockEmpty: Int
  +empty: Int
  +todo: Int
}

class File {
  +path: String!
  +content(encoding: String): String!
  +lineCounts(encoding: String): LineCounts!
  {method} +codeSmells: Connection<CodeSmell>!
}
File "1..*" *-- "0..*" CodeSmell : contains >
File --> LineCounts : has >

@enduml
